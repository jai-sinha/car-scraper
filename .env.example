# Copy the following into a file named `.env` in the root directory of the project.
# Make sure to replace the placeholder values with your actual credentials.

POSTGRES_USER=username
POSTGRES_PASSWORD=password
POSTGRES_DB=auctions

# Copy the following into an `.env` file in the project's /api directory.
# Again, replace the placeholder values with your actual credentials, but make sure the PG_USER, PG_PASSWORD, and PG_DATABASE match those in the root .env file.
# If your machine is more powerful than mine (an M2 MacBook Air), you can increase the KEYWORD_BATCH_SIZE, SCHEDULE_INTERVAL_MINUTES, and ASYNC_KEYWORD_SCRAPE_COUNT values by 50-100, 1, and 1-3 respectively to speed up the database population process. If it's less powerful, you may want to decrease the SCRAPE_COUNT and BATCH_SIZE, but you can probably leave the INTERVAL_MINUTES in place.

PG_HOST=postgres
PG_DATABASE=auctions
PG_USER=username
PG_PASSWORD=password
SECRET_KEY=secret-key
KEYWORD_BATCH_SIZE=50
SCHEDULE_INTERVAL_MINUTES=2
ASYNC_KEYWORD_SCRAPE_COUNT=2

# Copy the following into an `.env` file in the project's /site directory. Only change the VITE_API_URL if you want to expose a different port from the API server container.

VITE_API_URL=http://localhost:5001

# Once you've set up the environment variables, you can run the project using Docker Compose, and feel free to delete this .env.example file.